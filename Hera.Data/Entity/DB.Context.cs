//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hera.Data.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HeraEntities : DbContext
    {
        public HeraEntities()
            : base("name=HeraEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<App_Screen> App_Screen { get; set; }
        public virtual DbSet<App_Screen_Category> App_Screen_Category { get; set; }
        public virtual DbSet<App_Screen_Text> App_Screen_Text { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Category_Media> Category_Media { get; set; }
        public virtual DbSet<Category_Question> Category_Question { get; set; }
        public virtual DbSet<Category_Question_Answer> Category_Question_Answer { get; set; }
        public virtual DbSet<CMS_Content> CMS_Content { get; set; }
        public virtual DbSet<CMS_Content_Detail> CMS_Content_Detail { get; set; }
        public virtual DbSet<Health_Center> Health_Center { get; set; }
        public virtual DbSet<Member> Member { get; set; }
        public virtual DbSet<Member_Child> Member_Child { get; set; }
        public virtual DbSet<Member_Child_Vaccinate> Member_Child_Vaccinate { get; set; }
        public virtual DbSet<Member_Health_Record> Member_Health_Record { get; set; }
        public virtual DbSet<Member_Notification> Member_Notification { get; set; }
        public virtual DbSet<Member_Notification_Log> Member_Notification_Log { get; set; }
        public virtual DbSet<Member_Pregnancy> Member_Pregnancy { get; set; }
        public virtual DbSet<Member_Question_Answer> Member_Question_Answer { get; set; }
        public virtual DbSet<Notification> Notification { get; set; }
        public virtual DbSet<Notification_Message> Notification_Message { get; set; }
        public virtual DbSet<Notification_Sent> Notification_Sent { get; set; }
        public virtual DbSet<Notification_Sent_Detail> Notification_Sent_Detail { get; set; }
        public virtual DbSet<SLanguage> SLanguage { get; set; }
        public virtual DbSet<SLocation_City> SLocation_City { get; set; }
        public virtual DbSet<SLocation_Country> SLocation_Country { get; set; }
        public virtual DbSet<SLocation_Region> SLocation_Region { get; set; }
        public virtual DbSet<SResource> SResource { get; set; }
        public virtual DbSet<SType_Data> SType_Data { get; set; }
        public virtual DbSet<SType_Media> SType_Media { get; set; }
        public virtual DbSet<SType_Menu> SType_Menu { get; set; }
        public virtual DbSet<SType_Notification> SType_Notification { get; set; }
        public virtual DbSet<SType_QuestionAnswer> SType_QuestionAnswer { get; set; }
        public virtual DbSet<SType_Table> SType_Table { get; set; }
        public virtual DbSet<SUser> SUser { get; set; }
        public virtual DbSet<Translation> Translation { get; set; }
        public virtual DbSet<Vaccinate> Vaccinate { get; set; }
        public virtual DbSet<Vaccinate_Detail> Vaccinate_Detail { get; set; }
        public virtual DbSet<Vaccinate_Message> Vaccinate_Message { get; set; }
        public virtual DbSet<CMS_Content_Detail_Log> CMS_Content_Detail_Log { get; set; }
    
        public virtual ObjectResult<sp_Mobile_Translation_List_Result> sp_Mobile_Translation_List(Nullable<int> languageId)
        {
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Mobile_Translation_List_Result>("sp_Mobile_Translation_List", languageIdParameter);
        }
    
        public virtual ObjectResult<sp_Mobile_NearByHealthCenter_Result> sp_Mobile_NearByHealthCenter(Nullable<double> latitude, Nullable<double> longitude)
        {
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(double));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Mobile_NearByHealthCenter_Result>("sp_Mobile_NearByHealthCenter", latitudeParameter, longitudeParameter);
        }
    
        public virtual ObjectResult<sp_Notification_Job_RutineMessages_Result> sp_Notification_Job_RutineMessages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Notification_Job_RutineMessages_Result>("sp_Notification_Job_RutineMessages");
        }
    
        public virtual int sp_Set_Child_Vaccinate(Nullable<int> childId)
        {
            var childIdParameter = childId.HasValue ?
                new ObjectParameter("ChildId", childId) :
                new ObjectParameter("ChildId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Set_Child_Vaccinate", childIdParameter);
        }
    
        public virtual int sp_Update_Child_Vaccinate(Nullable<int> childId, string oldName, string newName, Nullable<System.DateTime> birthdate, Nullable<bool> nameIsChanged, Nullable<bool> birthdateIsChanged)
        {
            var childIdParameter = childId.HasValue ?
                new ObjectParameter("ChildId", childId) :
                new ObjectParameter("ChildId", typeof(int));
    
            var oldNameParameter = oldName != null ?
                new ObjectParameter("OldName", oldName) :
                new ObjectParameter("OldName", typeof(string));
    
            var newNameParameter = newName != null ?
                new ObjectParameter("NewName", newName) :
                new ObjectParameter("NewName", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(System.DateTime));
    
            var nameIsChangedParameter = nameIsChanged.HasValue ?
                new ObjectParameter("NameIsChanged", nameIsChanged) :
                new ObjectParameter("NameIsChanged", typeof(bool));
    
            var birthdateIsChangedParameter = birthdateIsChanged.HasValue ?
                new ObjectParameter("BirthdateIsChanged", birthdateIsChanged) :
                new ObjectParameter("BirthdateIsChanged", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_Child_Vaccinate", childIdParameter, oldNameParameter, newNameParameter, birthdateParameter, nameIsChangedParameter, birthdateIsChangedParameter);
        }
    
        public virtual int sp_Set_Member_Pregnancy(Nullable<int> memberId, Nullable<System.DateTime> lastDate)
        {
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            var lastDateParameter = lastDate.HasValue ?
                new ObjectParameter("LastDate", lastDate) :
                new ObjectParameter("LastDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Set_Member_Pregnancy", memberIdParameter, lastDateParameter);
        }
    
        public virtual ObjectResult<sp_Get_Member_Calendar_Result> sp_Get_Member_Calendar(Nullable<int> memberId)
        {
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Member_Calendar_Result>("sp_Get_Member_Calendar", memberIdParameter);
        }
    
        public virtual ObjectResult<sp_Mobile_Member_Language_Change_Result> sp_Mobile_Member_Language_Change(Nullable<int> memberId)
        {
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Mobile_Member_Language_Change_Result>("sp_Mobile_Member_Language_Change", memberIdParameter);
        }
    
        public virtual ObjectResult<sp_Manage_Dashboard_AVG_Child_Result> sp_Manage_Dashboard_AVG_Child()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Manage_Dashboard_AVG_Child_Result>("sp_Manage_Dashboard_AVG_Child");
        }
    
        public virtual ObjectResult<sp_Manage_Dashboard_Member_Age_Result> sp_Manage_Dashboard_Member_Age()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Manage_Dashboard_Member_Age_Result>("sp_Manage_Dashboard_Member_Age");
        }
    
        public virtual ObjectResult<sp_Notification_Job_ChildVaccinate_Result> sp_Notification_Job_ChildVaccinate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Notification_Job_ChildVaccinate_Result>("sp_Notification_Job_ChildVaccinate");
        }
    }
}
